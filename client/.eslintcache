[{"C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\index.js":"1","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\App.js":"2","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\reportWebVitals.js":"3","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\config\\graphql.js":"4","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\components\\Navigation.jsx":"5","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\pages\\Series.jsx":"6","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\pages\\Movies.jsx":"7","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\pages\\SeriesDetail.jsx":"8","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\pages\\MoviesDetail.jsx":"9","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\pages\\Home.jsx":"10","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\components\\SeriesCard.jsx":"11","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\pages\\Favorites.jsx":"12","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\components\\Card.jsx":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":1330,"mtime":1610961012685,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":190,"mtime":1610703408621,"results":"18","hashOfConfig":"15"},{"size":779,"mtime":1610887320772,"results":"19","hashOfConfig":"15"},{"size":1085,"mtime":1611023721475,"results":"20","hashOfConfig":"15"},{"size":5839,"mtime":1611023194478,"results":"21","hashOfConfig":"15"},{"size":138,"mtime":1610804612662,"results":"22","hashOfConfig":"15"},{"size":6622,"mtime":1611049259171,"results":"23","hashOfConfig":"15"},{"size":1684,"mtime":1611023202959,"results":"24","hashOfConfig":"15"},{"size":476,"mtime":1610882428911,"results":"25","hashOfConfig":"15"},{"size":118,"mtime":1610886189779,"results":"26","hashOfConfig":"15"},{"size":771,"mtime":1611024817404,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"n07y25",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\index.js",[],["60","61"],"C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\App.js",["62"],"import logo from './logo.svg';\nimport './App.css';\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nimport { ApolloProvider } from '@apollo/client'\nimport client from './config/graphql'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Navigation from './components/Navigation';\n\nimport Home from './pages/Home'\nimport Series from './pages/Series'\nimport Movies from './pages/Movies'\nimport SeriesDetail from './pages/SeriesDetail'\nimport MoviesDetail from './pages/MoviesDetail'\nimport Favorites from './pages/Favorites'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ApolloProvider client={client}>\n        <Router>\n          <Navigation />\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/movies\">\n              <Movies />\n            </Route>\n            <Route path=\"/movies/:id\">\n              <MoviesDetail />\n            </Route>\n            <Route exact path=\"/series\">\n              <Series />\n            </Route>\n            <Route path=\"/series/:id\">\n              <SeriesDetail />\n            </Route>\n            <Route path=\"Favorites\">\n              <Favorites />\n            </Route>\n          </Switch>\n        </Router>\n      </ApolloProvider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\reportWebVitals.js",[],"C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\config\\graphql.js",[],"C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\components\\Navigation.jsx",["63"],"import React from 'react';\r\nimport { Navbar, Nav, Dropdown, Icon } from 'rsuite'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Navigation () {\r\n  return (\r\n    <Navbar appearance=\"inverse\">\r\n      <Navbar.Header>\r\n        <p className=\"navbar-brand logo\">EntertainMe</p>\r\n      </Navbar.Header>\r\n      <Navbar.Body>\r\n        <Nav>\r\n          <Link to=\"/\"><Nav.Item icon={<Icon icon=\"home\" />}>Home</Nav.Item></Link>\r\n          <Link to=\"/about\"><Nav.Item>About</Nav.Item></Link>\r\n          <Link to=\"/movies\"><Nav.Item>Movies</Nav.Item></Link>\r\n          <Link to=\"/series\"><Nav.Item>TV Series</Nav.Item></Link>\r\n          <Link to=\"/favorites\"><Nav.Item>Favorites</Nav.Item></Link>\r\n        </Nav>\r\n      </Navbar.Body>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Navigation","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\pages\\Series.jsx",["64","65","66"],"import React from 'react';\r\nimport { Container, FlexboxGrid, Divider, Icon, Pagination, Button, ButtonToolbar } from 'rsuite';\r\nimport { gql, useQuery, useMutation } from \"@apollo/client\"\r\n\r\nimport Card from '../components/Card'\r\n\r\nconst GET_SERIES = gql`\r\n  query {\r\n    series {\r\n      _id\r\n      title\r\n      poster_path\r\n    }\r\n  }\r\n`\r\n\r\nfunction Series () {\r\n  const { loading, error, data, refetch } = useQuery(GET_SERIES)\r\n\r\n  if (loading) return (<Container justify=\"center\"><Icon icon=\"spinner\" spin size=\"5x\"/></Container>)\r\n  if (error) return <div>{JSON.stringify(error)}</div>\r\n  return (\r\n    <Container>\r\n      <h1 style={{ alignSelf: \"center\"}}>EntertainMe Series</h1>\r\n      <Divider />\r\n      <ButtonToolbar style={{ alignSelf: \"center\" }}>\r\n        <Button appearance=\"primary\">Add Series</Button>\r\n      </ButtonToolbar>\r\n      <FlexboxGrid justify=\"space-around\">\r\n        {data.series.map((serie) => {\r\n          return <Card key={serie._id} content={serie} from={\"series\"} />;\r\n        })}\r\n      </FlexboxGrid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Series","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\pages\\Movies.jsx",["67","68","69","70"],"import React, { useState } from 'react';\r\nimport { Container, FlexboxGrid, Divider, Icon, Pagination, Button, ButtonToolbar, Modal } from 'rsuite';\r\nimport { gql, useQuery, useMutation } from \"@apollo/client\"\r\nimport { Form, FormGroup, FormControl, ControlLabel, InputNumber, HelpBlock } from 'rsuite'\r\nimport { Schema } from 'rsuite';\r\n\r\nimport Card from '../components/Card'\r\n\r\nconst GET_MOVIES = gql`\r\n  query {\r\n    movies {\r\n      _id\r\n      title\r\n      poster_path\r\n    }\r\n  }\r\n`\r\n\r\nconst CREATE_MOVIE = gql`\r\n  mutation createMovie($inputMovie: MovieInput) {\r\n    createMovie(movies: $inputMovie) {\r\n      title\r\n    }\r\n  }\r\n`\r\n\r\nconst DELETE_MOVIE = gql`\r\n  mutation deleteMovie($id: String) {\r\n    deleteMovie(id: $id) {\r\n      _id\r\n    }\r\n  }\r\n`\r\n\r\nclass CustomField extends React.PureComponent {\r\n  render() {\r\n    const { name, message, label, accepter, error, ...props } = this.props;\r\n    return (\r\n      <FormGroup className={error ? 'has-error' : ''}>\r\n        <ControlLabel>{label} </ControlLabel>\r\n        <FormControl\r\n          name={name}\r\n          accepter={accepter}\r\n          errorMessage={error}\r\n          {...props}\r\n        />\r\n        <HelpBlock>{message}</HelpBlock>\r\n      </FormGroup>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Movies () {\r\n  const [createMovie] = useMutation(CREATE_MOVIE)\r\n  const [inputTitle, setInputTitle] = useState('')\r\n  const [inputOverview, setInputOverview] = useState('')\r\n  const [inputPoster, setInputPoster] = useState('')\r\n  const [inputPopularity, setInputPopularity] = useState(0)\r\n  const [inputTags, setInputTags] = useState([])\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  function addMovie (e) {\r\n    const inputMovie = {\r\n      title: inputTitle,\r\n      overview: inputOverview,\r\n      poster_path: inputPoster,\r\n      popularity: parseFloat(inputPopularity),\r\n      tags: inputTags.split(\",\").map((el) => el.trim())\r\n    }\r\n    \r\n    console.log(inputMovie)\r\n\r\n    createMovie({\r\n      variables: {\r\n        inputMovie: {\r\n          title: inputMovie.title,\r\n          overview: inputMovie.overview,\r\n          poster_path: inputMovie.poster_path,\r\n          popularity: inputMovie.popularity,\r\n          tags: inputMovie.tags\r\n        }\r\n      }\r\n    })\r\n\r\n    // setInputTitle('')\r\n    // setInputOverview('')\r\n    // setInputPoster('')\r\n    // setInputPopularity(0)\r\n    // setInputTags([])\r\n    // setShow(false)\r\n  }\r\n\r\n  function deleteMovie () {\r\n\r\n  }\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n  \r\n  const handleTitle = (e) => {\r\n    setInputTitle(e);\r\n  };\r\n  const handleOverview = (e) => {\r\n    setInputOverview(e);\r\n  };\r\n  const handlePoster = (e) => {\r\n    setInputPoster(e);\r\n  };\r\n  const handlePopularity = (e) => {\r\n    setInputPopularity(e);\r\n  };\r\n  const handleTags = (e) => {\r\n    setInputTags(e);\r\n  };\r\n\r\n  const { StringType, NumberType } = Schema.Types;\r\n  const model = Schema.Model({\r\n    title: StringType().isRequired('Title is required'),\r\n    overview: StringType().isRequired('Overview is required'),\r\n    poster_path: StringType().isRequired('Poster is required in URL format'),\r\n    popularity: NumberType(),\r\n    tags: StringType()\r\n  })\r\n\r\n  const { loading, error, data, refetch } = useQuery(GET_MOVIES)\r\n\r\n  if (loading) return (<Container justify=\"center\"><Icon icon=\"spinner\" spin size=\"5x\"/></Container>)\r\n  if (error) return <div>{JSON.stringify(error)}</div>\r\n  return (\r\n    <Container>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header>\r\n          <Modal.Title>Add Movies</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form \r\n            fluid \r\n            onSubmit={addMovie} \r\n            model={model}\r\n            formValue = {{\r\n              title: inputTitle,\r\n              overview: inputOverview,\r\n              poster_path: inputPoster,\r\n              popularity: inputPopularity,\r\n              tags: inputTags\r\n            }}\r\n          >\r\n            <FormGroup>\r\n              <ControlLabel>Title</ControlLabel>\r\n              <FormControl name=\"title\" type=\"text\" onChange={handleTitle}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>Overview</ControlLabel>\r\n              <FormControl name=\"overview\" type=\"textarea\" rows={5} componentClass=\"textarea\" onChange={handleOverview}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>Poster Path</ControlLabel>\r\n              <FormControl name=\"poster_path\" type=\"text\" onChange={handlePoster}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>Popularity</ControlLabel>\r\n              <CustomField\r\n                name=\"popularity\"\r\n                accepter={InputNumber}\r\n                step={0.1}\r\n                min={0}\r\n                max={10}\r\n                onChange={handlePopularity}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>Tags</ControlLabel>\r\n              <FormControl name=\"tags\" type=\"text\" onChange={handleTags}/>\r\n            </FormGroup>\r\n            <Button type=\"submit\" appearance=\"primary\">\r\n              Submit\r\n            </Button>\r\n            <Button onClick={handleClose} appearance=\"subtle\">\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <h1 style={{ alignSelf: \"center\"}}>EntertainMe Movies</h1>\r\n      <Divider />\r\n      <ButtonToolbar style={{ alignSelf: \"center\" }}>\r\n        <Button appearance=\"primary\" onClick={handleShow}>Add Movie</Button>\r\n      </ButtonToolbar>\r\n      <FlexboxGrid justify=\"space-around\">\r\n        {data.movies.map((movie) => {\r\n          return <Card key={movie._id} content={movie} from={\"movies\"} />;\r\n        })}\r\n      </FlexboxGrid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Movies","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\pages\\SeriesDetail.jsx",[],"C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\pages\\MoviesDetail.jsx",["71","72","73","74","75"],"C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\pages\\Home.jsx",["76"],"import React, { useEffect } from 'react';\r\nimport { Container, FlexboxGrid, Divider, Icon, Pagination } from 'rsuite';\r\nimport Card from '../components/Card'\r\n\r\nimport { gql, useQuery } from '@apollo/client'\r\n\r\nconst GET_DATA = gql`\r\n  query {\r\n    movies {\r\n      _id\r\n      title\r\n      poster_path\r\n    }\r\n    series {\r\n      _id\r\n      title\r\n      poster_path\r\n    }\r\n  }\r\n`\r\n\r\nfunction Home () {\r\n  const { loading, error, data, refetch } = useQuery(GET_DATA)\r\n\r\n  useEffect(() => {\r\n    refetch()\r\n  }, [data])\r\n\r\n  if (loading) return (<Container justify=\"center\"><Icon icon=\"spinner\" spin size=\"5x\"/></Container>)\r\n  if (error) return <div>{JSON.stringify(error)}</div>\r\n  return (\r\n    <Container>\r\n      <h1 style={{ alignSelf: \"center\" }}>Welcome to EntertainMe</h1>\r\n      <Divider />\r\n      <h3> Movie List </h3>\r\n      <FlexboxGrid justify=\"space-around\">\r\n        {data.movies.map((movie) => {\r\n          return <Card key={movie._id} content={movie} from={\"movies\"} />;\r\n        })}\r\n      </FlexboxGrid>\r\n      <Pagination prev\r\n        last\r\n        next\r\n        first\r\n        size=\"md\"\r\n        pages={10}\r\n        style={{ alignSelf:\"center\" , marginTop: \"20px\"}}\r\n      />\r\n      <Divider />\r\n      <h3> Series List </h3>\r\n      <FlexboxGrid justify=\"space-around\">\r\n        {data.series.map((serie) => {\r\n          return <Card key={serie._id} content={serie} from={\"series\"} />;\r\n        })}\r\n      </FlexboxGrid>\r\n      <Pagination prev\r\n        last\r\n        next\r\n        first\r\n        size=\"md\"\r\n        pages={10}\r\n        style={{ alignSelf:\"center\" , marginTop: \"20px\", marginBottom: \"20px\"}}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Home","C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\components\\SeriesCard.jsx",["77"],"C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\pages\\Favorites.jsx",[],"C:\\Users\\msidi\\belajar\\phase3\\entertainme\\client\\src\\components\\Card.jsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":8,"nodeType":"84","messageId":"85","endLine":1,"endColumn":12},{"ruleId":"82","severity":1,"message":"86","line":2,"column":23,"nodeType":"84","messageId":"85","endLine":2,"endColumn":31},{"ruleId":"82","severity":1,"message":"87","line":2,"column":49,"nodeType":"84","messageId":"85","endLine":2,"endColumn":59},{"ruleId":"82","severity":1,"message":"88","line":3,"column":25,"nodeType":"84","messageId":"85","endLine":3,"endColumn":36},{"ruleId":"82","severity":1,"message":"89","line":18,"column":33,"nodeType":"84","messageId":"85","endLine":18,"endColumn":40},{"ruleId":"82","severity":1,"message":"87","line":2,"column":49,"nodeType":"84","messageId":"85","endLine":2,"endColumn":59},{"ruleId":"82","severity":1,"message":"90","line":27,"column":7,"nodeType":"84","messageId":"85","endLine":27,"endColumn":19},{"ruleId":"82","severity":1,"message":"91","line":94,"column":12,"nodeType":"84","messageId":"85","endLine":94,"endColumn":23},{"ruleId":"82","severity":1,"message":"89","line":126,"column":33,"nodeType":"84","messageId":"85","endLine":126,"endColumn":40},{"ruleId":"82","severity":1,"message":"92","line":4,"column":59,"nodeType":"84","messageId":"85","endLine":4,"endColumn":68},{"ruleId":"82","severity":1,"message":"90","line":33,"column":7,"nodeType":"84","messageId":"85","endLine":33,"endColumn":19},{"ruleId":"82","severity":1,"message":"93","line":61,"column":9,"nodeType":"84","messageId":"85","endLine":61,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":123,"column":6,"nodeType":"96","endLine":123,"endColumn":8,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":190,"column":11,"nodeType":"100","endLine":193,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":27,"column":6,"nodeType":"96","endLine":27,"endColumn":12,"suggestions":"101"},{"ruleId":"82","severity":1,"message":"102","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Dropdown' is defined but never used.","'Pagination' is defined but never used.","'useMutation' is defined but never used.","'refetch' is assigned a value but never used.","'DELETE_MOVIE' is assigned a value but never used.","'deleteMovie' is defined but never used.","'Container' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["105"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["106"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [refetch]",{"range":"111","text":"112"},"Update the dependencies array to be: [data, refetch]",{"range":"113","text":"114"},[3013,3015],"[refetch]",[510,516],"[data, refetch]"]